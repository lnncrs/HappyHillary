(define writer
    (lambda (path values)
        (let ((port (open-output-file path)))
            (display "var words = [" port)
            (newline port)
            (let f ((ls values))
                (if (null? (cdr ls))
                    (begin
                        (display "{ text: " port)
                        (write (caar ls) port)
                        (display ", weight: " port)
                        (display (cadar ls) port)
                        (display "}" port)
                        (newline port))
                    (begin
                        (display "{ text: " port)
                        (write (caar ls) port)
                        (display ", weight: " port)
                        (display (cadar ls) port)
                        (display "}, " port)
                        (newline port)
                        (f (cdr ls)))))
            (display "];" port)
            (close-output-port port))))

(define writer-cloud
    (lambda (port values set)
        ;(let ((port (open-output-file path)))
            (display (string-append "var " set " = [") port)
            (newline port)
            (let f ((ls values))
                (if (and (null? (cdr ls)) (not (equal? (caar ls) "---")))
                    (begin
                        (display "{ text: " port)
                        (write (caar ls) port)
                        (display ", weight: " port)
                        (display (cadar ls) port)
                        (display "}" port)
                        (newline port))
                    (if (equal? "---" (cadr ls))
                        (begin
                            (display "{ text: " port)
                            (write (caar ls) port)
                            (display ", weight: " port)
                            (display (cadar ls) port)
                            (display "} " port)
                            (newline port)
                            (f (cdr ls)))
                        (begin
                            (display "{ text: " port)
                            (write (caar ls) port)
                            (display ", weight: " port)
                            (display (cadar ls) port)
                            (display "}, " port)
                            (newline port)
                            (f (cdr ls))))))
            (display "];" port)
            (newline port)
            ;(close-output-port port)
            ;)
            
            ))
            